import requests
import pytest

API_URL = "http://127.0.0.1:8000/todos"  # Ensure this matches your FastAPI URL

# Define test cases: (task_title, expected_status_code)
test_cases = [
    ("Valid Task", 201),                   # Valid input
    ("", 422),                             # Empty title
    ("Task with special chars !@#$%", 201),  # Valid with special characters
    (" " * 5, 422),                        # Just spaces (treated as empty)
    ("x" * 300, 422),                      # Very long name
    ("Task with newline\n", 422),          # Newline in name
]

@pytest.mark.parametrize("task_title, expected_status", test_cases)
def test_create_task(task_title, expected_status):
    # Create the payload for the API request
    payload = {
        "id": None,  # ID will be generated by the server
        "title": task_title,  # Use task_title from parametrize
        "description": "Python testing",  # Example description
        "completed": False  # Default value
    }

    # Print the payload for debugging
    print(f"Payload: {payload}")

    # Make the API request
    try:
        response = requests.post(API_URL, json=payload)
    except requests.exceptions.RequestException as e:
        print(f"Error making request: {e}")
        return  # Exit the test if the request fails

    # Output for debugging purposes
    print(f"Testing task title: '{task_title}' - Expected: {expected_status}, Got: {response.status_code}")

    # Attempt to print the JSON response; handle if it's not JSON
    try:
        json_response = response.json()
        print(f"Response JSON: {json_response}")
    except ValueError:
        print("Response is not in JSON format.")

    # Assert the response status code
    assert response.status_code == expected_status

if __name__ == "__main__":
    pytest.main()
